name: Atlas API build pipeline

# Using a similar workflow to: https://marcgg.com/blog/2016/02/22/git-flow-heroku-pipelines/
on:
  pull_request:
    branches: 
      - develop
      - release/*
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test
        run: |
          python manage.py test -v 2
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          #- name: Test with pytest
          #  run: |
          #    pip install pytest
          #    pytest

          # deploy-stage:
          # Only run the deploy to stage job when pull request to master (no direct push to production, that is 
          # handled by heroku - promote stage to production)
          #if: github.ref == 'refs/heads/master'

          # deploy-release
          # On deploy release push to master and to stage
